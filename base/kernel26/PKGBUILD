# $Id: Terralinux Main Kernel - martin $
# Maintainer: Martin Lee <hellnest@terralinux.org>

pkgbase=kernel26
pkgname=('kernel26' 'kernel26-headers' 'kernel26-docs')
_kernelname=${pkgname#kernel26}
pkgver=2.6.39.1
pkgrel=3
_commit=6d6d304
makedepends=('xmlto' 'docbook-xsl')
arch=(i686 x86_64)
license=('GPL2')
url="http://www.kernel.org"
options=(!strip)
_srcname=zen-stable-$_commit
source=(http://git.zen-kernel.org/zen-stable/snapshot/$_srcname.tar.bz2
        config config.x86_64 config.diff config.x86_64.diff
        # standard config files for mkinitcpio ramdisk
        kernel26.preset
        acpi-CLEVO-M360S-disable_acpi_irq.patch
        net-usb-rndis_host-poll-status-channel-before-control-channel.patch
        ide-pci-sis5513-965.patch
        acpi-video-add-blacklist-to-use-vendor-driver.patch
        char-agp-intel-new-Q57-id.patch
        sound-alsa-hda-ad1884a-hp-dc-model.patch
        sound-alsa-hda_intel-prealloc-4mb-dmabuffer.patch
        x86-p4_clockmod-reasonable-default-for-scaling_min_freq.patch
        x86-cpufreq-speedstep-dothan-3.patch
        x86-default_poweroff_up_machines.patch
        x86-boot-video-80x25-if-break.patch
	      fix-i915.patch 
        aufs2-base.patch
        aufs2-standalone.patch)

build() {
  msg "Applying Patchest"
  cd "$srcdir/$_srcname"
  echo "Applying patch..."
  patch -Np1 -i $srcdir/net-usb-rndis_host-poll-status-channel-before-control-channel.patch
  patch -Np1 -i $srcdir/acpi-CLEVO-M360S-disable_acpi_irq.patch
  patch -Np1 -i $srcdir/ide-pci-sis5513-965.patch
  patch -Np1 -i $srcdir/acpi-video-add-blacklist-to-use-vendor-driver.patch
  patch -Np1 -i $srcdir/char-agp-intel-new-Q57-id.patch
  patch -Np1 -i $srcdir/sound-alsa-hda-ad1884a-hp-dc-model.patch
  patch -Np1 -i $srcdir/sound-alsa-hda_intel-prealloc-4mb-dmabuffer.patch
  patch -Np1 -i $srcdir/x86-p4_clockmod-reasonable-default-for-scaling_min_freq.patch
  patch -Np1 -i $srcdir/x86-cpufreq-speedstep-dothan-3.patch
  patch -Np1 -i $srcdir/x86-default_poweroff_up_machines.patch
  patch -Np1 -i $srcdir/x86-boot-video-80x25-if-break.patch
  patch -Np1 -i $srcdir/fix-i915.patch

  echo "Applying AUFS patch"
  patch -p1 -i $srcdir/aufs2-base.patch
  patch -p1 -i $srcdir/aufs2-standalone.patch

cd "$srcdir/$_srcname"
  if [ "$CARCH" = "x86_64" ]; then
    cat ../config.x86_64 >./.config
    patch .config ../config.x86_64.diff
  else
    cat ../config >./.config
    patch .config ../config.diff
  fi
  if [ "${_kernelname}" != "" ]; then
    sed -i "s|CONFIG_LOCALVERSION=.*|CONFIG_LOCALVERSION=\"${_kernelname}\"|g" ./.config
    sed -i "s|CONFIG_LOCALVERSION_AUTO=.*|CONFIG_LOCALVERSION=n|" ./.config
  fi
  sed -i 's|EXTRAVERSION =.*|EXTRAVERSION =|' Makefile
  # get kernel version  
  make prepare
  # load configuration
  # Configure the kernel. Replace the line below with one of your choice.
  #make menuconfig # CLI menu for configuration
  make nconfig # new CLI menu for configuration
  #make xconfig # X-based configuration
  #make oldconfig # using old config from previous kernel version
  # ... or manually edit .config
  
  # rewrite configuration
  yes "" | make config >/dev/null

  # save configuration
  if [ "$CARCH" = "x86_64" ]; then
    diff -u ../config.x86_64 .config > "$startdir/config.x86_64.diff.last" || :
  else
    diff -u ../config .config > "$startdir/config.diff.last" || :
  fi

  ####################
  # stop here
  # this is useful to configure the kernel
  #msg "Stopping build"; return 1
  ####################

  # build!
  make ${MAKEFLAGS} LOCALVERSION= bzImage modules
}

package_kernel26() {
  pkgdesc="The Linux ZEN Kernel and modules"
  backup=(etc/mkinitcpio.d/${pkgname}.preset)
  depends=('coreutils' 'linux-firmware' 'module-init-tools>=3.12-2' 'mkinitcpio>=0.6.8-2')
  # pwc, ieee80211 and hostap-driver26 modules are included in kernel26 now
  # nforce package support was abandoned by nvidia, kernel modules should cover everything now.
  # kernel24 support is dropped since glibc24

  # Additional modules we already have
  provides=('vhba-module' 'tp_smapi')
  install=kernel26.install
  optdepends=('crda: to set the correct wireless channels of your country')

  KARCH=x86
  cd ${srcdir}/$_srcname
  # get kernel version
  _kernver="$(make LOCALVERSION= kernelrelease)"
  mkdir -p ${pkgdir}/{lib/modules,lib/firmware,boot}
  make LOCALVERSION= INSTALL_MOD_PATH=${pkgdir} modules_install
  cp System.map ${pkgdir}/boot/System.map26${_kernelname}
  cp arch/$KARCH/boot/bzImage ${pkgdir}/boot/vmlinuz26${_kernelname}
  #  # add vmlinux
  install -m644 -D vmlinux ${pkgdir}/usr/src/linux-${_kernver}/vmlinux

  # install fallback mkinitcpio.conf file and preset file for kernel
  install -m644 -D ${srcdir}/kernel26.preset ${pkgdir}/etc/mkinitcpio.d/${pkgname}.preset
  # set correct depmod command for install
  sed \
    -e  "s/KERNEL_NAME=.*/KERNEL_NAME=${_kernelname}/g" \
    -e  "s/KERNEL_VERSION=.*/KERNEL_VERSION=${_kernver}/g" \
    -i $startdir/kernel26.install
  sed \
    -e "s|source .*|source /etc/mkinitcpio.d/kernel26${_kernelname}.kver|g" \
    -e "s|default_image=.*|default_image=\"/boot/${pkgname}.img\"|g" \
    -e "s|fallback_image=.*|fallback_image=\"/boot/${pkgname}-fallback.img\"|g" \
    -i ${pkgdir}/etc/mkinitcpio.d/${pkgname}.preset

  echo -e "# DO NOT EDIT THIS FILE\nALL_kver='${_kernver}'" > ${pkgdir}/etc/mkinitcpio.d/${pkgname}.kver
  # remove build and source links
  rm -f ${pkgdir}/lib/modules/${_kernver}/{source,build}
  # remove the firmware
  rm -rf ${pkgdir}/lib/firmware
  # gzip -9 all modules to safe 100MB of space
  find "$pkgdir" -name '*.ko' -exec gzip -9 {} \;
}

package_kernel26-headers() {
  pkgdesc="Header files and scripts for building modules for kernel26-zen"
  mkdir -p ${pkgdir}/lib/modules/${_kernver}
  cd ${pkgdir}/lib/modules/${_kernver}
  ln -sf ../../../usr/src/linux-${_kernver} build
  cd ${srcdir}/$_srcname
  install -D -m644 Makefile \
    ${pkgdir}/usr/src/linux-${_kernver}/Makefile
  install -D -m644 kernel/Makefile \
    ${pkgdir}/usr/src/linux-${_kernver}/kernel/Makefile
  install -D -m644 .config \
    ${pkgdir}/usr/src/linux-${_kernver}/.config
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/include

  for i in acpi asm-generic config crypto drm generated linux math-emu \
    media net pcmcia scsi sound trace video xen; do
    cp -a include/$i ${pkgdir}/usr/src/linux-${_kernver}/include/
  done

  # copy arch includes for external modules
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/arch/x86
  cp -a arch/x86/include ${pkgdir}/usr/src/linux-${_kernver}/arch/x86/

  # copy files necessary for later builds, like nvidia and vmware
  cp Module.symvers ${pkgdir}/usr/src/linux-${_kernver}
  cp -a scripts ${pkgdir}/usr/src/linux-${_kernver}
  # fix permissions on scripts dir
  chmod og-w -R ${pkgdir}/usr/src/linux-${_kernver}/scripts
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/.tmp_versions

  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/kernel

  cp arch/$KARCH/Makefile ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/
  if [ "$CARCH" = "i686" ]; then
    cp arch/$KARCH/Makefile_32.cpu ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/
  fi
  cp arch/$KARCH/kernel/asm-offsets.s ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/kernel/

  # add headers for lirc package
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video
  cp drivers/media/video/*.h  ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video/
  for i in bt8xx cpia2 cx25840 cx88 em28xx et61x251 pwc saa7134 sn9c102; do
   mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video/$i
   cp -a drivers/media/video/$i/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video/$i
  done
  # add docbook makefile
  install -D -m644 Documentation/DocBook/Makefile \
    ${pkgdir}/usr/src/linux-${_kernver}/Documentation/DocBook/Makefile
  # add dm headers
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/md
  cp drivers/md/*.h  ${pkgdir}/usr/src/linux-${_kernver}/drivers/md
  # add inotify.h
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/include/linux
  cp include/linux/inotify.h ${pkgdir}/usr/src/linux-${_kernver}/include/linux/
  # add wireless headers
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/net/mac80211/
  cp net/mac80211/*.h ${pkgdir}/usr/src/linux-${_kernver}/net/mac80211/
  # add dvb headers for external modules
  # in reference to:
  # http://bugs.archlinux.org/task/9912
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-core
  cp drivers/media/dvb/dvb-core/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-core/
  # add dvb headers for external modules
  # in reference to:
  # http://bugs.archlinux.org/task/11194
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/include/config/dvb/
  cp include/config/dvb/*.h ${pkgdir}/usr/src/linux-${_kernver}/include/config/dvb/
  # add dvb headers for http://mcentral.de/hg/~mrec/em28xx-new
  # in reference to:
  # http://bugs.archlinux.org/task/13146
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/
  cp drivers/media/dvb/frontends/lgdt330x.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/
  cp drivers/media/video/msp3400-driver.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/
  # add dvb headers  
  # in reference to:
  # http://bugs.archlinux.org/task/20402
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-usb
  cp drivers/media/dvb/dvb-usb/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-usb/
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends
  cp drivers/media/dvb/frontends/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/common/tuners
  cp drivers/media/common/tuners/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/common/tuners/
  # add xfs and shmem for aufs building
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/fs/xfs
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/mm
  cp fs/xfs/xfs_sb.h ${pkgdir}/usr/src/linux-${_kernver}/fs/xfs/xfs_sb.h
  # copy in Kconfig files
  for i in `find . -name "Kconfig*"`; do 
    mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/`echo $i | sed 's|/Kconfig.*||'`
    cp $i ${pkgdir}/usr/src/linux-${_kernver}/$i
  done

  chown -R root.root ${pkgdir}/usr/src/linux-${_kernver}
  find ${pkgdir}/usr/src/linux-${_kernver} -type d -exec chmod 755 {} \;
  # strip scripts directory
  find ${pkgdir}/usr/src/linux-${_kernver}/scripts  -type f -perm -u+w 2>/dev/null | while read binary ; do
  case "$(file -bi "$binary")" in
    *application/x-sharedlib*) # Libraries (.so)
    /usr/bin/strip $STRIP_SHARED "$binary";;
    *application/x-archive*) # Libraries (.a)
    /usr/bin/strip $STRIP_STATIC "$binary";;
    *application/x-executable*) # Binaries
    /usr/bin/strip $STRIP_BINARIES "$binary";;
    esac 
  done 
  # remove unneeded architectures
  rm -rf ${pkgdir}/usr/src/linux-${_kernver}/arch/{alpha,arm,arm26,avr32,blackfin,cris,frv,h8300,ia64,m32r,m68k,m68knommu,mips,microblaze,mn10300,parisc,powerpc,ppc,s390,sh,sh64,sparc,sparc64,um,v850,xtensa}
}

package_kernel26-docs() {
pkgdesc="Kernel hackers manual - HTML documentation that comes with the Linux ZEN kernel."

cd ${srcdir}/$_srcname
mkdir -p $pkgdir/usr/src/linux-$_kernver
mv Documentation $pkgdir/usr/src/linux-$_kernver
find $pkgdir -type f -exec chmod 444 {} \;
find $pkgdir -type d -exec chmod 755 {} \;
# remove a file already in kernel26 package
rm -f $pkgdir/usr/src/linux-$_kernver/Documentation/DocBook/Makefile
}

sha256sums=('8eaa158004ba30bd02b345455447f1c625de90e8389c3f296f8e1b1d5c73334a'
            '591b4964a2f405cbfea46e21af2c85a715cce5230ae1ec773ca2347e2fd6d6f6'
            '43bc6cdcd7852064871d82d6d466b4d667e7587131a6a050e29a39ab71602614'
            'a12b211fba525aa6b1ed74efa0faee8bca0dd8921ab42c3f8f5a4d6b9b46664c'
            '4eceb0e7eb255cb833ab86a5e46afdd2de25b6ea3c5c7de5173dd1a51060c31d'
            'e4c2e9f3e719107bb8c78ac53d3ac8696e0ce78f9385cac0bcccd9e08e92d772'
            'ea48d6d9fa929c69494fb913e51c1c1ef51cfdd385eb4bc28ce43d008d53916c'
            'f776c2c7465f77c6fb5d267e27c176464604de46b759b9a8a74e8b67e4043b1c'
            'dbc02578a7a8e77a55b9fdd8bcfb8f95aebb2e94dcfa1e5a8d41ddf0fc273fa3'
            'e8fa82a7b8bb58d36b587705343758d83a569a38aec9c14d36e374240623aa91'
            '9dda3d777eb149637d8a7f415fc33dce54377a6d0293ad031b257fb06e2d981f'
            '013d5db1b9cacf1e724ecf4094e7484f9032e4c0e0bcb0b65eb0ac2fd49b663b'
            'b81a77512b350a0e4660ef0cf4a625fd42e974e883067c6681dc3f4320ac2ec7'
            '4ffbade2827af61cc6f0b0f384df63d810bc06b7c5bc97720c38ffdd21c16d66'
            '9958881ca860bef44320b26322aa17e31abfd5145e815223ecfa703e3550c346'
            '459f656cc7e1e45684d9f0f122d21c6cb68901dcdcbe1ab3b8124108244e2a80'
            '89b0cfef95ca2b5b29cab57a2fad3f2ed36adcfe610280f5c1078b5911946125'
            '9ccadbe3eb30bb283af3eb869c3a4bdb764628854811cc616a2e02e9ef398705'
            'cb0cd7c00a5def7ef518144fa86ebd84f59ca2c47f007b418f768acde4b887fd'
            '381348813f2efccb3f12ad460728ba52a74fdb2ae2a404cf140358e855c4d41f')
