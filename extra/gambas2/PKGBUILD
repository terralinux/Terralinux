# $Id: PKGBUILD 48045 2011-05-27 17:00:59Z lcarlier $
# Maintainer : Laurent Carlier <lordheavym@gmail.com>
# Contributor: Biru Ionut <ionut@archlinux.ro>
# Contributor: Andrea Scarpino <andrea@archlinux.org>
# Contributor: Giovanni Scafora <giovanni@archlinux.org>
# Contributor: Douglas Soares de Andrade <dsa@aur.archlinux.org>
# Contributor: Toni Foerster <stonerl@skeps.de>

pkgbase="gambas2"
pkgname=('gambas2-meta' 'gambas2-runtime' 'gambas2-devel' 'gambas2-ide' 'gambas2-examples' 'gambas2-help'
         'gambas2-script' 'gambas2-gb-chart' 'gambas2-gb-compress' 'gambas2-gb-corba' 'gambas2-gb-crypt'
         'gambas2-gb-db' 'gambas2-gb-db-firebird' 'gambas2-gb-db-form' 'gambas2-gb-db-mysql'
         'gambas2-gb-db-odbc' 'gambas2-gb-db-postgresql' 'gambas2-gb-db-sqlite2' 'gambas2-gb-db-sqlite3' 
         'gambas2-gb-desktop' 'gambas2-gb-form' 'gambas2-gb-form-dialog' 'gambas2-gb-form-mdi'
         'gambas2-gb-gtk' 'gambas2-gb-gtk-ext' 'gambas2-gb-gtk-svg' 'gambas2-gb-gui'
         'gambas2-gb-image' 'gambas2-gb-info' 'gambas2-gb-net' 'gambas2-gb-net-curl'
         'gambas2-gb-net-smtp' 'gambas2-gb-opengl' 'gambas2-gb-option' 'gambas2-gb-pcre'
         'gambas2-gb-pdf' 'gambas2-gb-qt' 'gambas2-gb-qt-ext' 'gambas2-gb-qt-opengl'
         'gambas2-gb-qt-kde' 'gambas2-gb-qt-kde-html' 'gambas2-gb-report' 'gambas2-gb-sdl'
         'gambas2-gb-sdl-sound' 'gambas2-gb-settings' 'gambas2-gb-v4l' 'gambas2-gb-vb'
         'gambas2-gb-web' 'gambas2-gb-xml' 'gambas2-gb-xml-rpc' 'gambas2-gb-xml-xslt')
pkgver=2.23.1
pkgrel=1
pkgdesc="A free development environment based on a Basic interpreter."
arch=('i686' 'x86_64')
url="http://gambas.sourceforge.net"
depends=('libffi' 'bzip2' 'libfbclient' 'zlib' 'kdelibs3' 'libgl' 'gtk2' 'librsvg' 'xdg-utils'
         'postgresql-libs>=8.4.1' 'libmysqlclient' 'unixodbc' 'sqlite2' 'sqlite3'
         'curl' 'poppler' 'sdl_mixer' 'sdl_image' 'libxtst' 'pcre' 'omniorb' 'libxft'
         'libxcursor' 'libsm')
makedepends=('intltool' 'mysql' 'postgresql')
license=('GPL2')
options=('!emptydirs' '!makeflags')
groups=('gambas2')
replaces=('gambas2')
conflicts=('gambas2')
source=(http://downloads.sourceforge.net/gambas/$pkgbase-$pkgver.tar.bz2
        'fix-gbi-gba-path.patch' 'db.firebird.gcc-4.6.0-fix.patch'
	'gambas2-script.install' 'gambas2-runtime.install')
md5sums=('ff8d2c1f310222c150b114e7ce247dfd'
         '9dda03a1bbfb7e7ba8b6a4ae91b6752b'
         'ac9703b390502ed3242c8d34485c9236'
         '870ff5b4b33cd75aa9c290539e6fdd5d'
         'ab5667175c4945282d2f40a35d0e9e5b')
_gbfiles="${srcdir}/$pkgbase-$pkgver/main/gbc"

_buildgbcomp() {
  cd ${srcdir}/${pkgbase}-${pkgver}/comp/src/$1
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbc2 -ag -r ${pkgdir}/usr
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gba2
  install $1.gambas ${pkgdir}/usr/lib/gambas2/
  install .component ${pkgdir}/usr/lib/gambas2/$1.component
  chmod a-x ${pkgdir}/usr/lib/gambas2/$1.component
  install .info ${pkgdir}/usr/share/gambas2/info/$1.info
  chmod a-x ${pkgdir}/usr/share/gambas2/info/$1.info
  install .list ${pkgdir}/usr/share/gambas2/info/$1.list
  chmod a-x ${pkgdir}/usr/share/gambas2/info/$1.list
  if test -d control; then
    install -d ${pkgdir}/usr/share/gambas2/control/$1
    install control/*.png ${pkgdir}/usr/share/gambas2/control/$1
    chmod a-x ${pkgdir}/usr/share/gambas2/control/$1/*.png
  fi
}

build() {
  cd "${srcdir}/$pkgbase-$pkgver"

  ## workaround to allow package splitting
  msg "Applying patches ..."
  patch -Np1 -i "${srcdir}/fix-gbi-gba-path.patch"
  # merged upstream
  patch -Np3 -i "${srcdir}/db.firebird.gcc-4.6.0-fix.patch"
  ./reconf-all
  ##
  
  . /etc/profile.d/kde3.sh
  . /etc/profile.d/qt3.sh

  ./configure -C --disable-qte --prefix=/usr
  make bindir=${pkgdir}/usr/bin
}

package_gambas2-meta() {
  depends=('gambas2-runtime' 'gambas2-devel' 'gambas2-ide' 'gambas2-examples' 'gambas2-help'
           'gambas2-script' 'gambas2-gb-chart' 'gambas2-gb-compress' 'gambas2-gb-corba' 'gambas2-gb-crypt'
           'gambas2-gb-db' 'gambas2-gb-db-firebird' 'gambas2-gb-db-form' 'gambas2-gb-db-mysql'
           'gambas2-gb-db-odbc' 'gambas2-gb-db-postgresql' 'gambas2-gb-db-sqlite2' 'gambas2-gb-db-sqlite3' 
           'gambas2-gb-desktop' 'gambas2-gb-form' 'gambas2-gb-form-dialog' 'gambas2-gb-form-mdi'
           'gambas2-gb-gtk' 'gambas2-gb-gtk-ext' 'gambas2-gb-gtk-svg' 'gambas2-gb-gui'
           'gambas2-gb-image' 'gambas2-gb-info' 'gambas2-gb-net' 'gambas2-gb-net-curl'
           'gambas2-gb-net-smtp' 'gambas2-gb-opengl' 'gambas2-gb-option' 'gambas2-gb-pcre'
           'gambas2-gb-pdf' 'gambas2-gb-qt' 'gambas2-gb-qt-ext' 'gambas2-gb-qt-opengl'
           'gambas2-gb-qt-kde' 'gambas2-gb-qt-kde-html' 'gambas2-gb-report' 'gambas2-gb-sdl'
           'gambas2-gb-sdl-sound' 'gambas2-gb-settings' 'gambas2-gb-v4l' 'gambas2-gb-vb'
           'gambas2-gb-web' 'gambas2-gb-xml' 'gambas2-gb-xml-rpc' 'gambas2-gb-xml-xslt')
  pkgdesc="Gambas2 meta package"
}

package_gambas2-runtime() {
  depends=('libffi' 'xdg-utils')
  pkgdesc="Gambas2 runtime environment"
  install=gambas2-runtime.install

  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/debug
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/eval
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/draw
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install

  install -D -m644 ${srcdir}/${pkgbase}-${pkgver}/main/lib/gb.component \
    ${pkgdir}/usr/lib/gambas2
  ln -s gbx2 ${pkgdir}/usr/bin/gbr2
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  rm -f ${pkgdir}/usr/lib/gambas2/gb.{so*,la}

  ## needed for postinst with xdg-utils
  install -d -m755 ${pkgdir}/usr/share/gambas2/mime
  install -D -m644 ${srcdir}/${pkgbase}-${pkgver}/main/mime/* \
    ${pkgdir}/usr/share/gambas2/mime/
  install -d -m755 ${pkgdir}/usr/share/gambas2/icons
  install -D -m644 ${srcdir}/${pkgbase}-${pkgver}/main/mime/application-x-gambas.png \
    ${pkgdir}/usr/share/gambas2/icons/application-x-gambas.png
}

package_gambas2-devel() {
  depends=('gambas2-runtime')
  pkgdesc="Gambas2 development environment"

  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbc
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-ide() {
  depends=('gambas2-gb-qt-ext' 'gambas2-gb-form-dialog' 'gambas2-gb-form-mdi' 'gambas2-gb-settings'
           'gambas2-gb-db' 'gambas2-gb-desktop' 'gambas2-devel')
  pkgdesc="Gambas2 Integrated Development Environment"
#  arch=('any')

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/eval
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/debug
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/draw
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/db
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/gui
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr
  _buildgbcomp gb.form
  _buildgbcomp gb.form.dialog
  _buildgbcomp gb.form.mdi
  _buildgbcomp gb.settings
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/app/src/gambas2
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbc2 -ag -r ${pkgdir}/usr
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gba2
  cd ${srcdir}/${pkgbase}-${pkgver}/app/src/gambas2-database-manager
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbc2 -ag -r ${pkgdir}/usr
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gba2
  cd ${srcdir}/${pkgbase}-${pkgver}/app/src/

  ## cleanup the workaround
  rm -r ${pkgdir}/usr/share ${pkgdir}/usr/lib
  rm ${pkgdir}/usr/bin/gbx2
  ##

  install -m755 gambas2/gambas2.gambas ${pkgdir}/usr/bin
  install -m755 gambas2-database-manager/gambas2-database-manager.gambas ${pkgdir}/usr/bin
  ln -s gambas2.gambas ${pkgdir}/usr/bin/gambas2
  install -D -m644 ${srcdir}/${pkgbase}-${pkgver}/app/desktop/gambas2.desktop \
    ${pkgdir}/usr/share/applications/gambas2.desktop
  install -D -m644 ${srcdir}/${pkgbase}-${pkgver}/app/desktop/gambas2.png \
    ${pkgdir}/usr/share/pixmaps/gambas2.png
}

package_gambas2-examples() {
  depends=('gambas2-gb-compress' 'gambas2-gb-corba' 'gambas2-gb-crypt'
           'gambas2-gb-db-firebird' 'gambas2-gb-db-form' 'gambas2-gb-db-mysql'
           'gambas2-gb-db-odbc' 'gambas2-gb-db-postgresql' 'gambas2-gb-db-sqlite2' 'gambas2-gb-db-sqlite3' 
           'gambas2-gb-desktop' 'gambas2-gb-form-dialog' 'gambas2-gb-form-mdi'
           'gambas2-gb-gtk-ext' 'gambas2-gb-gtk-svg' 'gambas2-gb-gui'
           'gambas2-gb-image' 'gambas2-gb-info' 'gambas2-gb-net' 'gambas2-gb-net-curl'
           'gambas2-gb-net-smtp' 'gambas2-gb-opengl' 'gambas2-gb-option' 'gambas2-gb-pcre'
           'gambas2-gb-pdf' 'gambas2-gb-qt-ext' 'gambas2-gb-qt-opengl'
           'gambas2-gb-qt-kde-html' 'gambas2-gb-report' 'gambas2-gb-sdl'
           'gambas2-gb-sdl-sound' 'gambas2-gb-settings' 'gambas2-gb-v4l' 'gambas2-gb-vb'
           'gambas2-gb-web' 'gambas2-gb-xml-rpc' 'gambas2-gb-xml-xslt')
  pkgdesc="Gambas2 examples"
#  arch=('any')

  cd ${srcdir}/${pkgbase}-${pkgver}
  make XDG_UTILS='' DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install

  rm -r ${pkgdir}/usr/bin ${pkgdir}/usr/lib
  rm -r ${pkgdir}/usr/share/gambas2/{help,info}
}

package_gambas2-help() {
  depends=()
  pkgdesc="Gambas2 help files"
#  arch=('any')

  cd ${srcdir}/${pkgbase}-${pkgver}/help
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install

  #fix help
  chown root:root -R ${pkgdir}/usr/share/gambas2/help/help
}

package_gambas2-script() {
  depends=('gambas2-devel')
  pkgdesc="Gambas2 scripter and server programs support"
  install=gambas2-script.install
#  arch=('any')

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/eval
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/app/src/gbs2
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbc2 -ag -r ${pkgdir}/usr
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gba2
  install -m755 gbs2.gambas ${pkgdir}/usr/bin

  ln -s gbs2.gambas ${pkgdir}/usr/bin/gbs2
  ln -s gbs2.gambas ${pkgdir}/usr/bin/gbw2  

  ## cleanup the workaround
  rm -r ${pkgdir}/usr/share ${pkgdir}/usr/lib
  rm ${pkgdir}/usr/bin/gbx2
  ##

  ## needed for postinst with xdg-utils
  cd ${srcdir}/${pkgbase}-${pkgver}/app/mime
  install -d -m755 ${pkgdir}/usr/share/gambas2/mime
  install -D -m644 *.xml ${pkgdir}/usr/share/gambas2/mime/
  install -D -m644 *.png ${pkgdir}/usr/share/gambas2/mime/
  ##
}

package_gambas2-gb-chart() {
  depends=('gambas2-gb-form')
  pkgdesc="Gambas2 chart component"
#  arch=('any')

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/draw
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/gui
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr
  ##

  _buildgbcomp gb.form
  _buildgbcomp gb.chart

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/{gb.{info,list},gb.qt*,gb.gui*,gb.form*}
  rm ${pkgdir}/usr/lib/gambas2/{gb.draw*,gb.qt*,gb.{so*,la},gb.gui*,gb.form*}
  rm -rf ${pkgdir}/usr/bin
  ##
}

package_gambas2-gb-compress() {
  depends=('gambas2-runtime' 'bzip2' 'zlib')
  pkgdesc="Gambas2 compression support component"

  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/compress
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.compress.bzlib2
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.compress.zlib
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-corba() {
  depends=('gambas2-runtime' 'omniorb')
  pkgdesc="Gambas2 corba component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.corba
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-crypt() {
  depends=('gambas2-runtime')
  pkgdesc="Gambas2 MD5/DES crypting component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.crypt
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-db() {
  depends=('gambas2-runtime')
  pkgdesc="Gambas2 database access component"

  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/db
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-db-firebird() {
  depends=('gambas2-gb-db' 'libfbclient')
  pkgdesc="Gambas2 Firebird database access component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.db.firebird
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-db-form() {
  depends=('gambas2-gb-db' 'gambas2-gb-form')
  pkgdesc="Gambas2 database form component"
#  arch=('any')

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/draw
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/gui
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/db
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr
  ##

  _buildgbcomp gb.db.form

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/{gb.{info,list},gb.qt*,gb.gui*,gb.db.{info,list}}
  rm ${pkgdir}/usr/lib/gambas2/{gb.draw*,gb.qt*,gb.{so*,la},gb.gui*,gb.db.{so*,la,component}}
  rm -rf ${pkgdir}/usr/bin
  ##
}

package_gambas2-gb-db-mysql() {
  depends=('gambas2-gb-db' 'libmysqlclient')
  pkgdesc="Gambas2 MySQL database access component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.db.mysql
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-db-odbc() {
  depends=('gambas2-gb-db' 'unixodbc')
  pkgdesc="Gambas2 ODBC database access component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.db.odbc
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-db-postgresql() {
  depends=('gambas2-gb-db' 'postgresql-libs>=8.4.1')
  pkgdesc="Gambas2 PostgreSQL database access component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.db.postgresql
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-db-sqlite2() {
  depends=('gambas2-gb-db' 'sqlite2')
  pkgdesc="Gambas2 Sqlite2 database access component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.db.sqlite2
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-db-sqlite3() {
  depends=('gambas2-gb-db' 'sqlite3')
  pkgdesc="Gambas2 Sqlite3 database access component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.db.sqlite3
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-desktop() {
  depends=('gambas2-runtime' 'libsm' 'libxtst')
  pkgdesc="Gambas2 desktop component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/draw
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.desktop
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/{gb.{info,list},gb.qt*}
  rm ${pkgdir}/usr/lib/gambas2/{gb.{so*,la},gb.qt*,gb.draw*}
  rm -rf ${pkgdir}/usr/bin
  ##
}

package_gambas2-gb-form() {
  depends=('gambas2-gb-gui')
  pkgdesc="Gambas2 form component"
#  arch=('any')

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/draw
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/gui
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr
  ##

  _buildgbcomp gb.form

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/{gb.{info,list},gb.qt*,gb.gui*}
  rm ${pkgdir}/usr/lib/gambas2/{gb.draw*,gb.qt*,gb.{so*,la},gb.gui*}
  rm -rf ${pkgdir}/usr/bin
  ##
}

package_gambas2-gb-form-dialog() {
  depends=('gambas2-gb-form')
  pkgdesc="Gambas2 form dialog component"
#  arch=('any')

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/draw
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/gui
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr
  ##

  _buildgbcomp gb.form
  _buildgbcomp gb.form.dialog

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/{gb.{info,list},gb.form.{info,list},gb.qt*,gb.gui*}
  rm ${pkgdir}/usr/lib/gambas2/{gb.draw*,gb.qt*,gb.{so*,la},gb.form.{component,gambas},gb.gui*}
  rm -rf ${pkgdir}/usr/bin
  ##
}

package_gambas2-gb-form-mdi() {
  depends=('gambas2-gb-form')
  pkgdesc="Gambas2 form MDI component"
#  arch=('any')

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/draw
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/gui
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr
  ##

  _buildgbcomp gb.form
  _buildgbcomp gb.form.mdi

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/{gb.{info,list},gb.form.{info,list},gb.qt*,gb.gui*}
  rm ${pkgdir}/usr/lib/gambas2/{gb.draw*,gb.qt*,gb.{so*,la},gb.form.{component,gambas},gb.gui*}
  rm -rf ${pkgdir}/usr/bin
  ##
}

package_gambas2-gb-gtk() {
  depends=('gambas2-runtime' 'gtk2')
  pkgdesc="Gambas2 graphical GTK+ toolkit component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/draw
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.gtk
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/{gb.{info,list},gb.gtk.ext*}
  rm ${pkgdir}/usr/lib/gambas2/{gb.draw*,gb.gtk.ext*,gb.{so*,la}}
  rm -rf ${pkgdir}/usr/bin
  ##
}

package_gambas2-gb-gtk-ext() {
  depends=('gambas2-gb-gtk')
  pkgdesc="Gambas2 graphical GTK+ toolkit extension component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.gtk/src/ext
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/gb.{info,list}
  rm ${pkgdir}/usr/lib/gambas2/gb.{so*,la}
  rm -rf ${pkgdir}/usr/bin
  ##
}

package_gambas2-gb-gtk-svg() {
  depends=('gambas2-gb-gtk' 'librsvg')
  pkgdesc="Gambas2 graphical GTK+ toolkit svg component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.gtk.svg
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/gb.{info,list}
  rm ${pkgdir}/usr/lib/gambas2/gb.{so*,la}
  rm -rf ${pkgdir}/usr/bin
  ##
}

package_gambas2-gb-gui() {
  depends=('gambas2-gb-qt' 'gambas2-gb-gtk')
  pkgdesc="Gambas2 automatic gui toolkit chooser"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/draw
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/gui
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/{gb.{info,list},gb.qt*}
  rm ${pkgdir}/usr/lib/gambas2/{gb.draw*,gb.qt*,gb.{so*,la}}
  rm -rf ${pkgdir}/usr/bin
  ##
}

package_gambas2-gb-image() {
  depends=('gambas2-runtime')
  pkgdesc="Gambas2 image processing component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.image
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-info() {
  depends=('gambas2-runtime')
  pkgdesc="Gambas2 info component"
#  arch=('any')

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  ##

  _buildgbcomp gb.info

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/gb.{info,list}
  rm ${pkgdir}/usr/lib/gambas2/gb.{so*,la}
  rm -rf ${pkgdir}/usr/bin
  ##
}

package_gambas2-gb-net() {
  depends=('gambas2-runtime')
  pkgdesc="Gambas2 networking component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-net-curl() {
  depends=('gambas2-runtime' 'curl')
  pkgdesc="Gambas2 advanced networking component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net.curl
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-net-smtp() {
  depends=('gambas2-runtime' 'glib2')
  pkgdesc="Gambas2 SMTP component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net.smtp
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-opengl() {
  depends=('gambas2-runtime' 'libgl' 'mesa')
  pkgdesc="Gambas2 OpenGL component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.opengl
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-option() {
  depends=('gambas2-runtime')
  pkgdesc="Gambas2 command-line options component"

  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/option
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-pcre() {
  depends=('gambas2-runtime' 'pcre')
  pkgdesc="Gambas2 PCRE component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.pcre
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-pdf() {
  depends=('gambas2-runtime' 'poppler')
  pkgdesc="Gambas2 PDF component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.pdf
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-qt() {
  depends=('gambas2-runtime' 'qt3')
  pkgdesc="Gambas2 graphical QT toolkit component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/draw
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/{gb.{info,list},gb.qt.ext*,gb.qt.opengl*}
  rm ${pkgdir}/usr/lib/gambas2/{gb.draw*,gb.qt.ext*,gb.qt.opengl*,gb.{so*,la}}
  rm -rf ${pkgdir}/usr/bin
  ##
}

package_gambas2-gb-qt-ext() {
  depends=('gambas2-gb-qt')
  pkgdesc="Gambas2 graphical QT toolkit extension component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt/src/ext
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/gb.{info,list}
  rm ${pkgdir}/usr/lib/gambas2/gb.{so*,la}
  rm -rf ${pkgdir}/usr/bin
  ##
}

package_gambas2-gb-qt-opengl() {
  depends=('gambas2-gb-qt' 'libgl')
  pkgdesc="Gambas2 graphical QT toolkit OpenGL component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt/src/opengl
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/gb.{info,list}
  rm ${pkgdir}/usr/lib/gambas2/gb.{so*,la}
  rm -rf ${pkgdir}/usr/bin
  ##
}

package_gambas2-gb-qt-kde() {
  depends=('gambas2-gb-qt' 'kdelibs3')
  pkgdesc="Gambas2 KDE component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt.kde
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install

  rm ${pkgdir}/usr/share/gambas2/info/gb.qt.kde.html*
  rm ${pkgdir}/usr/lib/gambas2/gb.qt.kde.html*
}

package_gambas2-gb-qt-kde-html() {
  depends=('gambas2-gb-qt-kde')
  pkgdesc="Gambas2 KHTML component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt.kde/src/html
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-report() {
  depends=('gambas2-runtime' 'gambas2-gb-form')
  pkgdesc="Gambas2 report component"
#  arch=('any')

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/draw
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/gui
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/db
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr
  ##

  _buildgbcomp gb.form
  _buildgbcomp gb.report

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/{gb.{info,list},gb.form.{info,list},gb.qt*,gb.gui*,gb.db*}
  rm ${pkgdir}/usr/lib/gambas2/{gb.draw*,gb.qt*,gb.{so*,la},gb.form.{component,gambas},gb.gui*,gb.db*}
  rm -rf ${pkgdir}/usr/bin
  ##
}

package_gambas2-gb-sdl() {
  depends=('gambas2-runtime' 'sdl_image' 'libxft' 'libxcursor' 'libgl')
  pkgdesc="Gambas2 SDL component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.sdl
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-sdl-sound() {
  depends=('gambas2-runtime' 'sdl_mixer')
  pkgdesc="Gambas2 SDL sound component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.sdl.sound
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-settings() {
  depends=('gambas2-runtime')
  pkgdesc="Gambas2 settings management component"
#  arch=('any')

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  ##

  _buildgbcomp gb.settings

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/gb.{info,list}
  rm ${pkgdir}/usr/lib/gambas2/gb.{so*,la}
  rm -rf ${pkgdir}/usr/bin
  ##
}

package_gambas2-gb-v4l() {
  depends=('gambas2-runtime' 'libjpeg' 'libpng')
  pkgdesc="Gambas2 V4L component"

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.v4l
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-vb() {
  depends=('gambas2-runtime')
  pkgdesc="Gambas2 VB transitional component"

  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/vb
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
}

package_gambas2-gb-web() {
  depends=('gambas2-runtime')
  pkgdesc="Gambas2 CGI component"
#  arch=('any')

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  ##

  _buildgbcomp gb.web

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/gb.{info,list}
  rm ${pkgdir}/usr/lib/gambas2/gb.{so*,la}
  rm -rf ${pkgdir}/usr/bin
  ##
}

package_gambas2-gb-xml() {
  depends=('gambas2-runtime' 'libxml2')
  pkgdesc="Gambas2 xml component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net.curl
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.xml
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/{gb.xml.{xslt*,rpc*},gb.{info,list},gb.net*}
  rm ${pkgdir}/usr/lib/gambas2/{gb.xml.{xslt*,rpc*},gb.{so*,la},gb.net*}
  rm -rf ${pkgdir}/usr/bin
  ##
}

package_gambas2-gb-xml-rpc() {
  depends=('gambas2-gb-xml' 'gambas2-gb-net' 'gambas2-gb-net-curl')
  pkgdesc="Gambas2 xml-rpc component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net.curl
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.xml
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/gb.{{info,list},xml.{info,list},xml.xslt.{info,list},net.*}
  rm ${pkgdir}/usr/lib/gambas2/gb.{{so*,la},xml.{so*,la,component},xml.xslt.*,net.*}
  rm -rf ${pkgdir}/usr/bin
  ##
}

package_gambas2-gb-xml-xslt() {
  depends=('gambas2-gb-xml' 'libxslt')
  pkgdesc="Gambas2 xml-xslt component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbx
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install
  mkdir -p ${pkgdir}/usr/share/gambas2/info
  ${srcdir}/${pkgbase}-${pkgver}/main/gbc/gbi2 -r ${pkgdir}/usr gb
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.xml/src/xslt
  make DESTDIR="${pkgdir}" GBFILES="${_gbfiles}" install

  ## cleanup the workaround
  rm ${pkgdir}/usr/share/gambas2/info/gb.{info,list}
  rm ${pkgdir}/usr/lib/gambas2/gb.{so*,la}
  rm -rf ${pkgdir}/usr/bin
  ##
}
